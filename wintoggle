#!/bin/bash
# The script minimizes/maximizes windows, based on the following algorithm:
# * A search is initiated for a certain window class
# * If a single instance of the window class exists, it's minimize/maximize state is toggled
# * If multiple instances of the window class exist, on each run the script switches between them
# * If the window class isn't matched, an attempt is made to launch it (see bellow)
#
# CLI parameters:
# * Parameter 1: Window class; Parameter 2: Bin executable (optional)
# * Parameter 2 is launched if the window class is not detected
#   If omitted, the script attempt to launch the program using it's class name
#
# I find the script very useful in conjunction with global hotkeys

if ! ( type xdotool &>/dev/null ); then
	echo 'xdotool not found'
	exit 1
fi

if [ -z "$1" ]; then
	echo 'No window class to match'
	exit 1
fi

if [ -z "$2" ]; then
	bin="$1"
else
	bin="$2"
fi

windows=$(xdotool search --class "$1")
wactive=$(xdotool search --onlyvisible --class "$1")
current=$(xdotool getactivewindow)
counter=0

if [ -z "$windows" ]; then
	echo 'Window class not matched'
	echo "Launching $bin"
	bash --noprofile -c "$bin"
else
	for w in $windows; do
		if [[ $w != "$current" ]]; then
			err=$(xdotool windowactivate "$w" 2>&1)
			if [ -z "$err" ]; then
				counter=$(( counter + 1 ))
				err=''
			fi
		fi
	done

	if (( counter == 0 )); then
		xdotool windowminimize "${wactive[0]}" 2> /dev/null
	fi
fi
